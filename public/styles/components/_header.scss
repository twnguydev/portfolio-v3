@use 'sass:map';
@use '../variables' as v;

.layout {
  position: relative;
  overflow-x: hidden;
  min-height: 100vh;
  background-color: var(--color-bg);
  color: var(--color-white);

  ::selection {
    background-color: rgba(var(--color-purple-500), 0.3);
    color: var(--color-white);
  }
}

.header {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: var(--z-header);
  backdrop-filter: blur(0.375rem);
  -webkit-backdrop-filter: blur(0.375rem);
  background-color: var(--color-black-20);
  border-bottom: 1px solid var(--color-white-10);

  &__container {
    max-width: var(--container-max-width);
    margin: 0 auto;
    padding-inline: 1rem;
    
    @media (min-width: map.get(v.$breakpoints, 'sm')) {
      padding-inline: 1.5rem;
    }
    
    @media (min-width: map.get(v.$breakpoints, 'lg')) {
      padding-inline: 2rem;
    }
  }

  &__content {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: var(--header-height);
  }

  &__left {
    display: flex;
    align-items: center;
    gap: 2rem;
  }

  &__right {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  // Navigation desktop
  &__nav {
    display: none;
    gap: 1.5rem;
    
    @media (min-width: map.get(v.$breakpoints, 'md')) {
      display: flex;
    }
  }

  &__nav-link {
    color: rgb(var(--color-gray-300-rgb));
    font-size: 0.875rem;
    font-weight: 500;
    transition: color var(--transition-fast);
    
    &:hover {
      color: var(--color-white);
    }
  }

  // Bouton menu mobile
  &__menu-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 2.5rem;
    height: 2.5rem;
    color: var(--color-white);
    border-radius: 0.5rem;
    background: transparent;
    border: none;
    cursor: pointer;
    transition: background-color var(--transition-fast);

    @media (min-width: map.get(v.$breakpoints, 'md')) {
      display: none;
    }

    &:hover {
      background-color: rgba(var(--color-white-rgb), 0.1);
    }

    svg {
      width: 1.5rem;
      height: 1.5rem;
    }
  }

  // Menu mobile
  &__mobile-menu {
    position: absolute;
    top: var(--header-height);
    left: 0;
    right: 0;
    background: rgba(var(--color-black-rgb), 0.95);
    backdrop-filter: blur(var(--blur-md));
    border-bottom: 1px solid rgba(var(--color-white-rgb), 0.1);
    padding: 1rem;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    animation: slideDown 0.2s ease-out;

    @media (min-width: map.get(v.$breakpoints, 'md')) {
      display: none;
    }
  }

  &__mobile-link {
    color: rgb(var(--color-gray-300-rgb));
    font-size: 1rem;
    font-weight: 500;
    padding: 0.75rem 1rem;
    border-radius: 0.5rem;
    transition: all var(--transition-fast);
    
    &:hover {
      color: var(--color-white);
      background-color: rgba(var(--color-white-rgb), 0.1);
    }
  }

  @keyframes slideDown {
    from {
      opacity: 0;
      transform: translateY(-1rem);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  &__social-group {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin-left: 1.5rem;
  }

  &__social-link {
    padding: 0.5rem;
    color: var(--color-white);
    transition: all var(--transition-fast);
    display: flex;
    align-items: center;
    justify-content: center;
    
    &:hover {
      background-color: rgba(var(--color-white-rgb), 0.1);
   
      svg {
        color: var(--color-purple-400);
      }
    }

    &[aria-label="GitHub Profile"] {
      border-radius: 9999px;
   
      svg {
        width: 2rem;
        height: 2rem;
      }
    }

    &[aria-label="LinkedIn Profile"] {
      border-radius: 0.375rem;
   
      svg {
        width: 1.5rem;
        height: 1.5rem;
      }
    }
   }

  &__contact-btn {
    position: relative;
    padding: 0.75rem 1.5rem;
    border-radius: 0.75rem;
    font-weight: 500;
    color: var(--color-white);
    background-image: var(--gradient-purple-pink);
    overflow: hidden;
    transition: background-image var(--transition-default);

    &:hover {
      background-image: var(--gradient-purple-pink-hover);
    }

    &:focus-visible {
      outline: 2px solid var(--color-purple-400);
      outline-offset: 2px;
    }
  }
}